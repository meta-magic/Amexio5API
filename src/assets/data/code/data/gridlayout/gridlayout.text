import {AmexioLayoutModule} from 'amexio-ng-extensions';
import { AmexioGridLayoutService, GridConfig, GridConstants} from 'amexio-ng-extensions';

export class GridLayoutDemo {
  
  gridDesktop: GridConfig;
  gridTablet: GridConfig;
  gridMobile: GridConfig;
  gridDesktop1: GridConfig;
  gridTablet1: GridConfig;
  gridMobile1: GridConfig;

  constructor(private _gridlayoutService : AmexioGridLayoutService) {
    
    // Creates All the Layout Configs;     
    this.createLayouts();
    
    // Create the Layouts
    this._gridlayoutService.createLayout(this.gridDesktop);
    this._gridlayoutService.createLayout(this.gridTablet);
    this._gridlayoutService.createLayout(this.gridMobile);

    this._gridlayoutService.createLayout(this.gridDesktop1);
    this._gridlayoutService.createLayout(this.gridTablet1);
    this._gridlayoutService.createLayout(this.gridMobile1);
  }

  // Create Layout Configurations for Desktop / Mobile / Tablets
  createLayouts() {
    this.gridDesktop = new GridConfig('LayoutSample1', GridConstants.Desktop)
    .addlayout(["gridmenu", "gridheader", "gridheader", "gridheader", "gridheader", "gridheader"])
    .addlayout(["gridmenu", "gridmain", "gridmain", "gridmain", "gridright", "gridright"])
    .addlayout(["gridfooter", "gridfooter", "gridfooter", "gridfooter", "gridright", "gridright"]);
      this.gridTablet = new GridConfig('LayoutSample1', GridConstants.Tablet)
      .addlayout(["gridmenu", "gridmenu", "gridheader", "gridheader", "gridheader", "gridheader"])
      .addlayout(["gridmenu", "gridmenu", "gridmain", "gridmain", "gridright", "gridright"])
      .addlayout(["gridmenu", "gridmenu", "gridmain", "gridmain", "gridright", "gridright"])
      .addlayout(["gridmenu", "gridmenu", "gridfooter", "gridfooter", "gridfooter", "gridfooter"]);
      this.gridMobile = new GridConfig('LayoutSample1', GridConstants.Mobile)
      .addlayout(["gridheader", "gridheader", "gridheader", "gridheader", "gridheader", "gridheader"])
      .addlayout(["gridmenu", "gridmenu", "gridmenu", "gridmenu", "gridmenu", "gridmenu"])
      .addlayout(["gridmain", "gridmain", "gridmain", "gridmain", "gridmain", "gridmain"])
      .addlayout(["gridright", "gridright", "gridright", "gridright", "gridright", "gridright"])
      .addlayout(["gridfooter", "gridfooter", "gridfooter", "gridfooter", "gridfooter", "gridfooter"]);

      this.gridDesktop1 = new GridConfig('LayoutSample2', GridConstants.Desktop)
      .addlayout(["gridmenu", "gridmenu", "gridheader", "gridheader", "gridheader", "gridheader"])
    .addlayout(["gridmenu", "gridmenu", "gridmain", "gridmain", "gridright", "gridright"])
    .addlayout(["gridmenu", "gridmenu", "gridfooter", "gridfooter", "gridfooter", "gridfooter"]);
      this.gridTablet1 = new GridConfig('LayoutSample2', GridConstants.Tablet)
      .addlayout(["gridmenu", "gridmenu", "gridheader", "gridheader", "gridheader", "gridheader"])
      .addlayout(["gridmenu", "gridmenu", "gridmain", "gridmain", "gridmain", "gridmain"])
      .addlayout(["gridmenu", "gridmenu", "gridright", "gridright", "gridright", "gridright"])
      .addlayout(["gridmenu", "gridmenu", "gridfooter", "gridfooter", "gridfooter", "gridfooter"]);
      this.gridMobile1 = new GridConfig('LayoutSample2', GridConstants.Mobile)
      .addlayout(["gridheader", "gridheader", "gridheader", "gridheader", "gridheader", "gridheader"])
      .addlayout(["gridmenu", "gridmenu", "gridmenu", "gridmenu", "gridmenu", "gridmenu"])
      .addlayout(["gridmain", "gridmain", "gridmain", "gridmain", "gridmain", "gridmain"])
      .addlayout(["gridright", "gridright", "gridright", "gridright", "gridright", "gridright"])
      .addlayout(["gridfooter", "gridfooter", "gridfooter", "gridfooter", "gridfooter", "gridfooter"]);
  }
}
